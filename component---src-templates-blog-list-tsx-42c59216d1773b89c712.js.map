{"version":3,"file":"component---src-templates-blog-list-tsx-42c59216d1773b89c712.js","mappings":"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","sources":["webpack://@blog/personal-lite/./src/components/pagination/pagination.style.tsx","webpack://@blog/personal-lite/./src/components/pagination/pagination.tsx","webpack://@blog/personal-lite/./src/components/post-card-minimal/post-card-minimal.style.tsx","webpack://@blog/personal-lite/./src/components/post-card-minimal/post-card-minimal.tsx","webpack://@blog/personal-lite/./src/templates/blog-list.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const PaginationWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const PrevPage = styled.div`\n  min-width: 32px;\n  a {\n    width: 32px;\n    height: 32px;\n    color: ${themeGet('colors.textColor', '#292929')};\n    border-radius: 50%;\n    background-color: #f3f3f3;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: 0.15s ease-in-out;\n    svg {\n      display: block;\n    }\n    &:hover {\n      color: #fff;\n      background-color: ${themeGet('colors.primary', '#D10068')};\n    }\n  }\n`;\n\nexport const NextPage = styled.div`\n  min-width: 32px;\n  a {\n    width: 32px;\n    height: 32px;\n    color: ${themeGet('colors.textColor', '#292929')};\n    border-radius: 50%;\n    background-color: #f3f3f3;\n    font-size: 18px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: 0.15s ease-in-out;\n    svg {\n      display: block;\n    }\n    &:hover {\n      color: #fff;\n      background-color: ${themeGet('colors.primary', '#D10068')};\n    }\n  }\n`;\n\nexport const PageNumber = styled.div``;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport { IoMdArrowRoundBack, IoMdArrowRoundForward } from 'react-icons/io';\nimport {\n  PaginationWrapper,\n  PrevPage,\n  NextPage,\n  PageNumber,\n} from './pagination.style';\n\ntype PaginationProps = {\n  prevLink?: string | undefined | null | boolean;\n  nextLink?: string | undefined | null | boolean;\n  currentPage: string;\n  totalPage: string;\n  className?: string;\n};\n\nconst Pagination: React.FunctionComponent<PaginationProps> = ({\n  prevLink,\n  nextLink,\n  currentPage,\n  totalPage,\n  className,\n  ...props\n}) => {\n  return (\n    <PaginationWrapper {...props} className={className}>\n      <PrevPage>\n        {prevLink && (\n          <Link to={`${prevLink}`} aria-label=\"Prev\">\n            <IoMdArrowRoundBack />\n          </Link>\n        )}\n      </PrevPage>\n\n      <PageNumber>{`Page ${currentPage} Of ${totalPage}`}</PageNumber>\n\n      <NextPage>\n        {nextLink && (\n          <Link to={`${nextLink}`} aria-label=\"Next\">\n            <IoMdArrowRoundForward />\n          </Link>\n        )}\n      </NextPage>\n    </PaginationWrapper>\n  );\n};\n\nexport default Pagination;\n","import styled from 'styled-components';\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const PostCardWrapper = styled.div`\n  position: relative;\n  .post_preview {\n    > a {\n      display: block;\n      overflow: hidden;\n      height: 100%;\n    }\n  }\n  &:hover {\n    .post_preview {\n      transform: translateY(0);\n    }\n    .post_date {\n      transform: translateY(100%);\n    }\n  }\n`;\n\nexport const PostPreview = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  transform: translateY(-100%);\n  transition: 0.35s ease-in-out;\n  img {\n    border-radius: 3px;\n  }\n  @media (max-width: 1024px) {\n    transform: translateY(0);\n  }\n  @media (max-width: 575px) {\n    margin-bottom: 30px;\n    width: auto;\n    height: auto;\n    position: relative;\n    transform: translateY(0);\n  }\n`;\n\nexport const PostDetails = styled.div`\n  display: flex;\n  @media (max-width: 575px) {\n    flex-direction: column;\n  }\n`;\n\nexport const PostDate = styled.div`\n  font-size: 90px;\n  font-weight: 700;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n  line-height: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  color: ${themeGet('colors.textColor', '#292929')};\n  transition: 0.35s ease-in-out;\n  @media (max-width: 1200px) {\n    font-size: 70px;\n  }\n  @media (max-width: 990px) {\n    font-size: 56px;\n  }\n  @media (max-width: 575px) {\n    display: none;\n  }\n\n  > span {\n    font-size: 13px;\n    font-weight: 400;\n    display: block;\n    margin-top: 12px;\n    text-transform: uppercase;\n  }\n`;\n\nexport const PostContent = styled.div`\n  align-self: center;\n`;\n\nexport const PostTitle = styled.h2`\n  font-size: 21px;\n  font-weight: 700;\n  color: ${themeGet('colors.textColor', '#292929')};\n  line-height: 1.53;\n  margin-bottom: 10px;\n  font-family: 'Fira Sans', sans-serif;\n  a {\n    color: ${themeGet('colors.textColor', '#292929')};\n  }\n  @media (max-width: 1200px) {\n    font-size: 21px;\n  }\n  @media (max-width: 990px) {\n    font-size: 19px;\n    margin-bottom: 12px;\n  }\n  @media (max-width: 575px) {\n    font-size: 17px;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Excerpt = styled.p`\n  font-size: ${themeGet('fontSizes.3', '15')}px;\n  color: ${themeGet('textColor', '#292929')};\n  font-weight: 400;\n  line-height: 2;\n  margin-bottom: 0;\n  @media (max-width: 990px) {\n    font-size: 14px;\n  }\n`;\n\nexport const PostTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-bottom: 15px;\n\n  a {\n    display: block;\n    margin-right: 30px;\n    font-size: 14px;\n    font-weight: 400;\n    color: ${themeGet('primary', '#D10068')};\n    @media (max-width: 990px) {\n      font-size: 13px;\n      margin-right: 25px;\n    }\n  }\n`;\n\nexport const PostDateAndPreview = styled.div`\n  position: relative;\n  margin-right: 45px;\n  flex-shrink: 0;\n  overflow: hidden;\n  height: 170px;\n  width: 170px;\n  @media (max-width: 1200px) {\n    margin-right: 35px;\n  }\n  @media (max-width: 990px) {\n    margin-right: 25px;\n  }\n  @media (max-width: 575px) {\n    height: auto;\n    width: auto;\n  }\n`;\n\nexport const ReadMore = styled.div`\n  margin-top: 16px;\n  a {\n    font-size: 13px;\n    font-weight: 500;\n    color: ${themeGet('textColor', '#292929')};\n    transition: 0.15s ease-in-out;\n    &:hover {\n      color: ${themeGet('primary', '#D10068')};\n    }\n  }\n`;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\nimport _ from 'lodash';\nimport GatsbyImage from '../../components/gatsby-image';\nimport {\n  PostCardWrapper,\n  PostPreview,\n  PostDetails,\n  PostDate,\n  PostTitle,\n  Excerpt,\n  PostContent,\n  PostTags,\n  PostDateAndPreview,\n  ReadMore,\n} from './post-card-minimal.style';\n\ninterface PostCardMinimalProps {\n  image?: any;\n  title: string;\n  description?: string;\n  url: string;\n  date?: string;\n  tags?: [];\n  className?: string;\n}\n\nconst PostCardMinimal: React.FunctionComponent<PostCardMinimalProps> = ({\n  image,\n  title,\n  description,\n  url,\n  date,\n  tags,\n  className,\n  ...props\n}) => {\n  // Add all classs to an array\n  const addAllClasses = ['post_card'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <PostCardWrapper className={addAllClasses.join(' ')} {...props}>\n      <PostDetails className=\"post_details\">\n        <PostDateAndPreview>\n          {date && (\n            <PostDate\n              dangerouslySetInnerHTML={{\n                __html: date,\n              }}\n              className=\"post_date\"\n            />\n          )}\n          {image == null ? null : (\n            <PostPreview className=\"post_preview\">\n              <Link to={url}>\n                {/* <img src={image} alt=\"\" /> */}\n                <GatsbyImage\n                  src={image}\n                  alt=\"post preview\"\n                  width={170}\n                  height={170}\n                />\n              </Link>\n            </PostPreview>\n          )}\n        </PostDateAndPreview>\n\n        <PostContent className=\"post_content\">\n          {tags == null ? null : (\n            <PostTags className=\"post_tags\">\n              {tags.map((tag: string, index: number) => (\n                <Link key={index} to={`/tags/${_.kebabCase(tag)}/`}>\n                  {`#${tag}`}\n                </Link>\n              ))}\n            </PostTags>\n          )}\n          <PostTitle className=\"post_title\">\n            <Link to={url}>{title}</Link>\n          </PostTitle>\n          {description && (\n            <Excerpt\n              dangerouslySetInnerHTML={{\n                __html: description,\n              }}\n              className=\"excerpt\"\n            />\n          )}\n          <ReadMore>\n            <Link to={url}>Read More</Link>\n          </ReadMore>\n        </PostContent>\n      </PostDetails>\n    </PostCardWrapper>\n  );\n};\n\nexport default PostCardMinimal;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport PostCardMinimal from '../components/post-card-minimal/post-card-minimal';\nimport Pagination from '../components/pagination/pagination';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { BlogPostsWrapper } from './templates.style';\n\nconst BlogList = (props: any) => {\n  const { data } = props;\n  const Posts = data.allMarkdownRemark.edges;\n  const { currentPage, numPages } = props.pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage =\n    currentPage - 1 === 1 ? '/page/1' : `/page/${(currentPage - 1).toString()}`;\n  const nextPage = `/page/${(currentPage + 1).toString()}`;\n  const PrevLink = !isFirst && prevPage;\n  const NextLink = !isLast && nextPage;\n\n  return (\n    <Layout>\n      <SEO title={`Page ${currentPage}`} />\n\n      <BlogPostsWrapper>\n        {Posts.map(({ node }: any) => {\n          return (\n            <PostCardMinimal\n              key={node.fields.slug}\n              title={node.frontmatter.title || node.fields.slug}\n              image={\n                node.frontmatter.cover == null\n                  ? null\n                  : node.frontmatter.cover.childImageSharp.gatsbyImageData\n              }\n              url={node.fields.slug}\n              description={node.frontmatter.description || node.excerpt}\n              date={node.frontmatter.date}\n              tags={node.frontmatter.tags}\n            />\n          );\n        })}\n\n        <Pagination\n          prevLink={PrevLink}\n          nextLink={NextLink}\n          currentPage={`${currentPage}`}\n          totalPage={`${numPages}`}\n        />\n      </BlogPostsWrapper>\n    </Layout>\n  );\n};\n\nexport default BlogList;\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    sitePage {\n      path\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 300)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"DD [<span>] MMMM [</span>]\")\n            title\n            description\n            tags\n            cover {\n              childImageSharp {\n                gatsbyImageData(\n                  layout: FULL_WIDTH\n                  placeholder: BLURRED\n                  formats: [AUTO, WEBP, AVIF]\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["PaginationWrapper","styled","PrevPage","themeGet","NextPage","PageNumber","prevLink","nextLink","currentPage","totalPage","className","props","React","Link","to","IoMdArrowRoundBack","IoMdArrowRoundForward","PostCardWrapper","PostPreview","PostDetails","PostDate","PostContent","PostTitle","Excerpt","PostTags","PostDateAndPreview","ReadMore","image","title","description","url","date","tags","addAllClasses","push","join","dangerouslySetInnerHTML","__html","GatsbyImage","src","alt","width","height","map","tag","index","key","_kebabCase","Posts","data","allMarkdownRemark","edges","pageContext","numPages","isFirst","isLast","prevPage","toString","nextPage","PrevLink","NextLink","Layout","SEO","BlogPostsWrapper","node","PostCardMinimal","fields","slug","frontmatter","cover","childImageSharp","gatsbyImageData","excerpt","Pagination"],"sourceRoot":""}